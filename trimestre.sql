CREATE TABLE TABELA_VENDEDORES(
	ID VARCHAR(8) NOT NULL,
	NOME VARCHAR (150) NULL,
	CIDADE VARCHAR (100) DEFAULT  'São Paulo',
	PRIMARY KEY (ID) 
);

CREATE TABLE TABELA_VENDAS(
	ID VARCHAR(8) NOT NULL,
	FUNCIONARIO VARCHAR (8) NULL,
	PRODUTO VARCHAR (8) NOT NULL,
	QTE_PROD INT,
	VALOR FLOAT,
	DATA_VENDA DATE NOT NULL,
	PRIMARY KEY (ID)
);

ALTER TABLE TABELA_VENDAS 
ADD CONSTRAINT FK_FUNCIONARIO 
FOREIGN KEY (FUNCIONARIO) REFERENCES TABELA_VENDEDORES (ID);

CREATE TABLE FAT_TRIMESTRE(
	ANO INT,
	Q1 FLOAT,
	Q2 FLOAT,
	Q3 FLOAT,
	Q4 FLOAT,
	VENDEDOR VARCHAR(500),
);

WITH ANO_TRIMESTRE AS (
    -- Primeira CTE
    SELECT 
        SUBSTRING(FAT.ANO_MES, 1, 4) AS ANO,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '01' AND '03' THEN FAT.VENDA ELSE 0 END) AS Q1,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '04' AND '06' THEN FAT.VENDA ELSE 0 END) AS Q2,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '07' AND '09' THEN FAT.VENDA ELSE 0 END) AS Q3,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '10' AND '12' THEN FAT.VENDA ELSE 0 END) AS Q4
    FROM (
        SELECT 
            ROUND(SUM(QTE_PROD * VALOR), 2) AS VENDA,
            SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7) AS ANO_MES
        FROM TABELA_VENDAS
        GROUP BY SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7)
    ) FAT
    GROUP BY SUBSTRING(FAT.ANO_MES, 1, 4)
),
VendasAnuais AS (
    -- Segunda CTE
    SELECT 
        FAT.NOME,
        SUBSTRING(FAT.ANO_MES, 1, 4) AS ANO,
        SUM(VENDA) AS VENDAS_ANO
    FROM (
        SELECT 
            B.NOME,
            ROUND(SUM(QTE_PROD * VALOR), 2) AS VENDA,
            SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7) AS ANO_MES
        FROM TABELA_VENDAS
        INNER JOIN TABELA_VENDEDORES B ON FUNCIONARIO = B.ID
        GROUP BY SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7), B.NOME
    ) FAT
    GROUP BY SUBSTRING(FAT.ANO_MES, 1, 4), FAT.NOME
)
INSERT INTO FAT_TRIMESTRE (ANO, Q1, Q2, Q3, Q4, VENDEDOR)

SELECT V1.ANO as ANO, B.Q1 AS Q1, B.Q2 AS Q2, B.Q3 AS Q3, B.Q4 AS Q4,V1.NOME AS VENDEDOR
FROM VendasAnuais V1
INNER JOIN ANO_TRIMESTRE B ON V1.ANO = B.ANO
WHERE V1.VENDAS_ANO = (
    SELECT MAX(VENDAS_ANO)
    FROM VendasAnuais V2
    WHERE V1.ANO = V2.ANO
);

CREATE TRIGGER TG_ITENS_VENDIDOS 
ON [dbo].[TABELA_VENDAS] 
AFTER INSERT, UPDATE, DELETE 
AS 
BEGIN 
DELETE FROM FAT_TRIMESTRE;

WITH ANO_TRIMESTRE AS (
    -- Primeira CTE
    SELECT 
        SUBSTRING(FAT.ANO_MES, 1, 4) AS ANO,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '01' AND '03' THEN FAT.VENDA ELSE 0 END) AS Q1,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '04' AND '06' THEN FAT.VENDA ELSE 0 END) AS Q2,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '07' AND '09' THEN FAT.VENDA ELSE 0 END) AS Q3,
        SUM(CASE WHEN SUBSTRING(FAT.ANO_MES, 6, 2) BETWEEN '10' AND '12' THEN FAT.VENDA ELSE 0 END) AS Q4
    FROM (
        SELECT 
            ROUND(SUM(QTE_PROD * VALOR), 2) AS VENDA,
            SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7) AS ANO_MES
        FROM TABELA_VENDAS
        GROUP BY SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7)
    ) FAT
    GROUP BY SUBSTRING(FAT.ANO_MES, 1, 4)
),
VendasAnuais AS (
    -- Segunda CTE
    SELECT 
        FAT.NOME,
        SUBSTRING(FAT.ANO_MES, 1, 4) AS ANO,
        SUM(VENDA) AS VENDAS_ANO
    FROM (
        SELECT 
            B.NOME,
            ROUND(SUM(QTE_PROD * VALOR), 2) AS VENDA,
            SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7) AS ANO_MES
        FROM TABELA_VENDAS
        INNER JOIN TABELA_VENDEDORES B ON FUNCIONARIO = B.ID
        GROUP BY SUBSTRING(CONVERT(VARCHAR, DATA_VENDA), 1, 7), B.NOME
    ) FAT
    GROUP BY SUBSTRING(FAT.ANO_MES, 1, 4), FAT.NOME
)
INSERT INTO FAT_TRIMESTRE (ANO, Q1, Q2, Q3, Q4, VENDEDOR)

SELECT V1.ANO as ANO, B.Q1 AS Q1, B.Q2 AS Q2, B.Q3 AS Q3, B.Q4 AS Q4,V1.NOME AS VENDEDOR
FROM VendasAnuais V1
INNER JOIN ANO_TRIMESTRE B ON V1.ANO = B.ANO
WHERE V1.VENDAS_ANO = (
    SELECT MAX(VENDAS_ANO)
    FROM VendasAnuais V2
    WHERE V1.ANO = V2.ANO
);

END;